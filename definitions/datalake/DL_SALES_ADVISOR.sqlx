config {
  type: "incremental",
  schema: "datalake",
  name: "DL_SALES_ADVISOR",
  uniqueKey: ["unique_key"],
    tags: ["datalake", "PRODUCTS"]
}
js {
  const env_prefix = dataform.projectConfig.vars.env === "dev" ? "dev" :
                     dataform.projectConfig.vars.env === "ppd" ? "ppd" :
                     "prd";
} 
with SA_with_hash as 
(SELECT
distinct
    sales_person_key,
    store_code,
    last_name,
    first_name,
    email,
    telephone,
    sales_person_position,
    CONCAT(
    COALESCE(sales_person_key, ''), 
    COALESCE(store_code, ''), 
    COALESCE(last_name, ''), 
    COALESCE(first_name, ''), 
    COALESCE(email, ''), 
    COALESCE(telephone, ''), 
    COALESCE(sales_person_position, '')) as unique_key,
TO_HEX(MD5(CONCAT(
    COALESCE(sales_person_key, ''), 
    COALESCE(store_code, ''), 
    COALESCE(last_name, ''), 
    COALESCE(first_name, ''), 
    COALESCE(email, ''), 
    COALESCE(telephone, ''), 
    COALESCE(sales_person_position, '')
    
  ))) AS row_hash
FROM
  `mja_us_bqd_dpf_y2_01_${env_prefix}.Y2_SALES_ASSOCIATES`) 
  
  select 
  distinct
      ori.sales_person_key,
    ori.store_code,
    ori.last_name,
    ori.first_name,
    ori.email,
    ori.telephone,
    ori.sales_person_position,
    ori.unique_key,
    ori.row_hash
   from 
  SA_with_hash ori
  
  ${when(incremental(), `
    LEFT JOIN ${self()} destination on cast (destination.sales_person_key as string ) = ori.sales_person_key
    WHERE ifnull(destination.row_hash,'') <> ori.row_hash
`) }

